# -*- coding: utf-8 -*-
"""app

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DwEIxdxS4X1M0tiaXJHnZCMaOIvaaaEA
"""

import streamlit as st
import pandas as pd
import numpy as np
from tensorflow.keras.models import load_model

# load the saved LSTM model
model = load_model('lstm_model.h5')

# function to make predictions using the loaded model
def predict_temperature(data):
    # slice the data to only include the last 60 days
    data = data[-60:]
    # reshape the input data to match the expected input shape of the model
    data = data.reshape((1, data.shape[0], 1))
    # make the prediction
    prediction = model.predict(data)
    # return the predicted temperature value
    return prediction[0][0]

# set up the Streamlit app
st.title("Daily Temperature Predictor")
st.write("This app predicts the average temperature for May 2023 in Szeged, Hungary based on historical data.")

# load the temperature data
data = pd.read_csv('GlobalTemperatures.csv', parse_dates=['dt'])
data.set_index('dt', inplace=True)

# slice the data to only include May 2023
data = data.loc['2023-05']

# display the current temperature data
st.subheader("Temperature Data for May 2023")
st.write(data)

# get the predicted temperature value for May 2023
predicted_temp = predict_temperature(np.array(data['LandAverageTemperature']))

# display the predicted temperature value for May 2023
st.subheader("Predicted Temperature for May 2023")
st.write("Predicted Temperature:", predicted_temp)
